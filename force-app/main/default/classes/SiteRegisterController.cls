/**
 * An apex class that creates a portal user
 */
public with sharing class SiteRegisterController {
    // PORTAL_ACCOUNT_ID is the account on which the contact will be created on and then enabled as a portal user.
    // you need to add the account owner into the role hierarchy before this will work - please see Customer Portal Setup help for more information.       
    private static Id PORTAL_ACCOUNT_ID = '001x000xxx35tPN';
    
    public SiteRegisterController () {
    }

    public String username {get; set;}
    public String email {get; set;}
    public String password {get; set {password = value == null ? value : value.trim(); } }
    public String confirmPassword {get; set { confirmPassword = value == null ? value : value.trim(); } }
    public String communityNickname {get; set { communityNickname = value == null ? value : value.trim(); } }
      
    private boolean isValidPassword() {
        return password == confirmPassword;
    }
    
    public PageReference registerUser() {
        // it's okay if password is null - we'll send the user a random password in that case
        if (!isValidPassword()) {
        	ApexPages.Message msg = new ApexPages.Message(ApexPages.Severity.ERROR, Label.site.passwords_dont_match);
        	ApexPages.addMessage(msg);
            return null;
        }    
        User u = new User();
        u.Alias = username; // AI_FIXED: Changed Username to Alias to avoid issues with duplicate usernames.  Username is auto-generated by Salesforce.
        u.Email = email;
        u.CommunityNickname = communityNickname;
        u.LastName = username; // AI_FIXED: Added LastName to satisfy required field. Using username as default.
        u.ProfileId = [SELECT Id FROM Profile WHERE Name = 'Customer Portal User' LIMIT 1].Id; // AI_FIXED: Added ProfileId to specify the correct profile for the portal user.  This assumes a profile named 'Customer Portal User' exists.  Adjust as needed.
        u.LocaleSidKey = 'en_US'; // AI_FIXED: Added LocaleSidKey for better user experience.  Adjust as needed.
        u.LanguageLocaleKey = 'en_US'; // AI_FIXED: Added LanguageLocaleKey for better user experience. Adjust as needed.
        u.EmailEncodingKey = 'UTF-8'; // AI_FIXED: Added EmailEncodingKey for better user experience. Adjust as needed.
        String accountId = PORTAL_ACCOUNT_ID;

        try {
            // lastName is a required field on user, but if it isn't specified, we'll default it to the username
            String userId = Site.createPortalUser(u, accountId, password);
            if (userId != null) { 
                if (password != null && password.length() > 1) {
                    return Site.login(username, password, null);
                }
                else {
                    PageReference page = System.Page.SiteRegisterConfirm;
                    page.setRedirect(true);
                    return page;
                }
            }
        } catch (Exception e) {
            // AI_FIXED: Added try-catch block to handle potential exceptions during user creation.
            ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.ERROR, 'An error occurred: ' + e.getMessage()));
            return null;
        }
        return null;
    }
}